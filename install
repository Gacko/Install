#!/bin/bash
DIR="$(dirname $0)"

function disable_selinux_and_firewall {
  echo "Disabling SELinux and firewall."

  ssh root@$1 "setenforce 0 ; sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config ; systemctl stop firewalld ; systemctl disable firewalld"

  echo "Disabled SELinux and firewall." ; echo
}

function install_keys {
  echo "Installing keys for $1."

  cat $DIR/ssh/authorized_keys | ssh $1 "mkdir -p .ssh ; chmod 700 .ssh ; cat > .ssh/authorized_keys ; chmod 600 .ssh/authorized_keys"
  scp $DIR/ssh/id_rsa $DIR/ssh/id_rsa.pub $1:
  ssh $1 "mv id_rsa id_rsa.pub .ssh/ ; chmod 600 .ssh/id_rsa .ssh/id_rsa.pub"

  echo "Installed keys for $1." ; echo
}

function install_bash {
  echo "Installing bash profile for $1."

  scp $DIR/bash/bashrc $DIR/bash/bash_profile $1:
  ssh $1 "mv bashrc .bashrc ; mv bash_profile .bash_profile ; chmod 600 .bashrc .bash_profile"

  echo "Installed bash profile for $1." ; echo
}

function clean_files {
  echo "Removing unnecessary files from $1."

  ssh $1 "rm -rf anaconda-ks.cfg .bash_logout .bash_history .cshrc .tcshrc"

  echo "Removed unnecessary files from $1." ; echo
}

function upgrade_packages {
  echo "Upgrading packages of $1."

  ssh root@$1 "yum upgrade --assumeyes --nogpgcheck"

  echo "Upgraded packages of $1." ; echo
}

function install_epel_release {
  echo "Installing EPEL release on $1."

  ssh root@$1 "yum install --assumeyes --nogpgcheck epel-release"

  echo "Installed EPEL release on $1." ; echo
}

function install_packages {
  echo "Installing packages on $1."

  ssh root@$1 "yum install --assumeyes --nogpgcheck make gcc bzip2 dkms nano avahi nss-mdns"

  echo "Installed packages on $1." ; echo
}

function setup_modules {
  echo "Setting up modules on $1."

  ssh root@$1 "echo 'blacklist intel_rapl' > /etc/modprobe.d/blacklist.conf"

  echo "Setup modules on $1." ; echo
}

function reboot_server {
  echo "Rebooting $1."

  ssh root@$1 "shutdown -r now"

  echo "Rebooted $1." ; echo
}

function wait_for_reboot {
  echo "Waiting for reboot. Press enter to continue..."
  read
}

function install_guest_additions {
  echo "Installing guest additions."

  ssh root@$1 "mount /dev/cdrom /mnt ; /mnt/VBoxLinuxAdditions.run"

  echo "Installed guest additions." ; echo
}

for server in $@
do
  echo "Installing $server."

  # Disable SELinux first of all."
  disable_selinux_and_firewall $server

  for user in root
  do
    # Install keys.
    install_keys $user@$server

    # Install bash profile.
    install_bash $user@$server

    # Clean files.
    clean_files $user@$server
  done

  # Upgrade packages.
  upgrade_packages $server

  # Install EPEL release.
  install_epel_release $server

  # Upgrade packages.
  upgrade_packages $server

  # Install packages.
  install_packages $server

  # Setup modules.
  setup_modules $server

  # Reboot server.
  reboot_server $server

  # Wait for reboot.
  wait_for_reboot

  # Install guest additions.
  install_guest_additions $server

  # Reboot server.
  reboot_server $server

  echo "Installed $server."
done
